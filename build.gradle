plugins {
	id("com.google.cloud.tools.jib") version "2.6.0"
//	id("com.github.johnrengelman.shadow") version "6.1.0"
	id("io.micronaut.application") version "1.2.0"
	id("org.sonarqube") version "3.0"
}

version = "0.1"
group = "mx.com.ga.cosmonaut.catalogs"
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
	mavenLocal()
	maven{
		url "https://nexus.wintermute.network/nexus/repository/libs-release/"
	}
	maven{
		url "https://nexus.wintermute.network/nexus/repository/libs-snapshot/"
	}
	mavenCentral()
	jcenter()
}

micronaut {
	runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("mx.com.ga.cosmonaut.catalogs.*")
	}
}

dependencies {
	annotationProcessor("io.micronaut.data:micronaut-data-processor")
	annotationProcessor("io.micronaut.security:micronaut-security-annotations")
	annotationProcessor("io.micronaut.openapi:micronaut-openapi")
	annotationProcessor ('org.projectlombok:lombok:1.18.16')
	implementation("io.micronaut.security:micronaut-security-jwt")
	implementation("io.micronaut.data:micronaut-data-jdbc")
	implementation("io.swagger.core.v3:swagger-annotations")
	implementation("io.micronaut:micronaut-validation")
	implementation("io.micronaut:micronaut-runtime")
	implementation("io.micronaut:micronaut-http-client")
	
	implementation("io.micronaut:micronaut-management")	
	implementation group: 'io.micronaut.kubernetes', name: 'micronaut-kubernetes-discovery-client', version: '2.1.0'

	
	

	testAnnotationProcessor("io.micronaut:micronaut-inject-java")

	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testImplementation("io.micronaut.test:micronaut-test-junit5:2.3.1")

	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
	testRuntimeOnly("org.testcontainers:postgresql")

	testCompileOnly ('org.projectlombok:lombok:1.18.16')
	testAnnotationProcessor ('org.projectlombok:lombok:1.18.16')

	runtimeOnly("ch.qos.logback:logback-classic")
	runtime("org.postgresql:postgresql")
	runtime("io.micronaut.sql:micronaut-jdbc-hikari")
	implementation("mx.com.ga.cosmonaut.common:lib:1.0-SNAPSHOT")

}


application {
	mainClass.set("mx.com.ga.cosmonaut.catalogs.Application")
}

java {
	sourceCompatibility = JavaVersion.toVersion("11")
	targetCompatibility = JavaVersion.toVersion("11")
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.fork = true
	options.forkOptions.jvmArgs <<
			'-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

sonarqube {
	properties {
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.scm.disabled", "true"
		//property "sonar.login", "76ef9fa9c4828783a74d07c29959540f7396b5e1"
	}
}

tasks.withType(com.bmuschko.gradle.docker.tasks.image.DockerBuildImage ){
	images.empty()
	images.add("gcr.io/cosmonaut-299500/cosmonaut/catalogos:${project.hasProperty('tag')?tag:'DEV-2021-02-11-01'}")
}
